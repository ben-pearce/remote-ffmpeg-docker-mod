#!/usr/bin/with-contenv bash

FFMPEG_BINARY=${REMOTE_FFMPEG_BINARY:-$(which ffmpeg)}
REMOTE_ABI=${REMOTE_FFMPEG_REMOTE_ABI:-'glibc'}
SSHFS_BINARY=${REMOTE_SSHFS_BINARY:-"/usr/bin/${REMOTE_ABI}-sshfs"}
BUBBLEWRAP_BINARY=${REMOTE_BUBBLEWRAP_BINARY:-"/usr/bin/${REMOTE_ABI}-bwrap"}
FFMPEG_HASH=($(md5sum ${FFMPEG_BINARY}))
SSHFS_HASH=($(md5sum ${SSHFS_BINARY}))
BWRAP_HASH=($(md5sum ${BUBBLEWRAP_BINARY}))
VERSION_HASH=($(echo ${FFMPEG_HASH} ${SSHFS_HASH} ${BWRAP_HASH} ${REMOTE_ABI} | md5sum))
FFMPEG_PORT=${REMOTE_FFMPEG_PORT:-34567}
REMOTE_ROOT=/tmp/ffmpeg-$(hostname)-$$
REMOTE_CACHE=/tmp/ffmpeg-${VERSION_HASH}
SSH_KEY_PATH=${REMOTE_FFMPEG_SSH_KEY_PATH:-/config/.ssh/id_*}
CACHE_FFMPEG_LIBS=$(ldd ${FFMPEG_BINARY} | awk 'NF == 2 {print $1} NF == 4 {print $3}')
CACHE_BINARY=${REMOTE_ROOT}/${FFMPEG_BINARY}
SFTP_SERVER_PATH=$(command -v /usr/lib/ssh/sftp-server || command -v /usr/lib/openssh/sftp-server)
LOCK_TIMEOUT=${REMOTE_FFMPEG_LOCK_TIMEOUT:-30}
SHARED_LOCK=/var/lock/ffmpeg-${VERSION_HASH}-shared.lock
EXCLUSIVE_LOCK=/var/lock/ffmpeg-${VERSION_HASH}-exclusive.lock
SSH_ARGUMENTS=( -i ${SSH_KEY_PATH} -o StrictHostKeyChecking=no -o ControlMaster=auto -o ControlPath=~/.ssh/%r@%h:%p )
if flock -w $LOCK_TIMEOUT 300; then
    IFS=',' read -r -a HOSTS <<< "$REMOTE_FFMPEG_FORWARD_HOSTS"
    ALIAS=""
    KILL=""
    FORWARD_ARGS=()
    for FORWARD in "${HOSTS[@]}" ; do
        IFS=':' read -r LOCAL_PORT ADDR REMOTE_PORT <<< "$FORWARD"
        SOCAT_PID_FILE=/tmp/ffmpeg-socat-$LOCAL_PORT.pid
        [[ ! $ADDR =~ ^([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)$ ]] && ALIAS+="127.0.0.1 $ADDR"$'\n'
        if flock -e --nb 200; then
            /usr/bin/socat TCP-LISTEN:$LOCAL_PORT,reuseaddr,fork TCP:$ADDR:$REMOTE_PORT &
            echo $! > $SOCAT_PID_FILE
            flock -u 200
        fi 200>"$SHARED_LOCK"
        KILL+="flock -e --nb $SHARED_LOCK kill \$(cat $SOCAT_PID_FILE) && rm $SOCAT_PID_FILE;"
        FORWARD_ARGS+=(-R $LOCAL_PORT:localhost:$LOCAL_PORT)
    done

    SSH_PID_FILE=/tmp/ffmpeg-ssh.pid
    SOCAT_PID_FILE=/tmp/ffmpeg-socat.pid
    if flock -e --nb 200; then
        /usr/bin/socat TCP-LISTEN:${FFMPEG_PORT},reuseaddr,fork EXEC:"$SFTP_SERVER_PATH" &
        FORWARD_ARGS+=(-R ${FFMPEG_PORT}:localhost:${FFMPEG_PORT})
        echo $! > $SOCAT_PID_FILE
        /usr/bin/ssh -qtN "${SSH_ARGUMENTS[@]}" ${FORWARD_ARGS[@]} ${REMOTE_FFMPEG_USER}@${REMOTE_FFMPEG_HOST} &
        echo $! > $SSH_PID_FILE
        flock -u 200
    fi 200>"$SHARED_LOCK"
    KILL="flock -e --nb $SHARED_LOCK kill \$(cat $SSH_PID_FILE) && rm $SSH_PID_FILE;$KILL"
    KILL+="flock -e --nb $SHARED_LOCK kill \$(cat $SOCAT_PID_FILE) && rm $SOCAT_PID_FILE;"

    CACHE_DIR=$(mktemp -d)
    ln -sf $FFMPEG_BINARY $CACHE_FFMPEG_LIBS $SSHFS_BINARY $BUBBLEWRAP_BINARY $CACHE_DIR
    tar -h -C $CACHE_DIR -czf - . 2>/dev/null | /usr/bin/ssh \
        -q "${SSH_ARGUMENTS[@]}" ${REMOTE_FFMPEG_USER}@${REMOTE_FFMPEG_HOST} \
        "[[ ! -d ${REMOTE_CACHE} ]] && mkdir -p ${REMOTE_CACHE} && tar xzf - -C ${REMOTE_CACHE}"
    rm -r $CACHE_DIR

    trap "$KILL" EXIT
    flock -u 300
fi 300>"$EXCLUSIVE_LOCK"

SCRIPT=$(cat <<ENDSSH
trap "umount ${REMOTE_ROOT}; rm -r ${REMOTE_ROOT}" EXIT
mkdir -p ${REMOTE_ROOT}
${REMOTE_CACHE}/${REMOTE_ABI}-sshfs localhost:/ ${REMOTE_ROOT} -o directport=${FFMPEG_PORT}
${REMOTE_CACHE}/${REMOTE_ABI}-bwrap \
    --setenv LD_LIBRARY_PATH ${REMOTE_CACHE} \
    --bind ${REMOTE_ROOT} / \
    --ro-bind ${REMOTE_CACHE} ${REMOTE_CACHE} \
    --ro-bind-data 3 /etc/hosts \
    --proc /proc \
    --dev-bind /dev /dev \
    --bind /sys /sys \
    --unshare-pid \
    --die-with-parent \
    ${REMOTE_CACHE}/ffmpeg ${*@Q} 3< <(echo "${ALIAS}");
ENDSSH
)

flock $SHARED_LOCK /usr/bin/ssh \
    -qt "${SSH_ARGUMENTS[@]}" \
    ${REMOTE_FFMPEG_USER}@${REMOTE_FFMPEG_HOST} "${SCRIPT}"